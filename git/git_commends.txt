git config --global user.name <name you want>  --> global for enrire repos in your computer. Without global for current repo.
git config --global user.email <email id of cloud repo providder while register>
git clone <url> --> for cloning the remote repository.
touch <filename with extention> --> for creating new file in this repository.
git help --all or git help -a --> for showing all the commands and its descriptions.
git <command> -help  for showing the desired command and its descriptions.
git <command> --help for showing the relevent manual in browser. 
git add <filename> --> for adding the file to be commited (alsoknown as staging).
git add <.> --> for adding all untracked,modified and deleted files inside the current directory to the repo.
git add --all --> for adding all untracked,modified and deleted files to the repo.
git add -A --> for adding all untracked,modified and deleted files to the repo. 
git add < *.extension > for adding all file with the matched extention.
git add -u --> for adding tracked files(modified and deleted.)
git status --> for showing the status of the loacl repo.
git status --short --> for showing the status of the loacl repo as short like M for modified, A-added,??-untracked,D-deleted.
git restore --staged <filrname> --> for restore the added file back into working directory.
git restore <filename> --> for restore or discard all the changes in working directory. 
git commit -m <'message or descripton'> --> for commiting our changes (making a new version)
git commit -am <'message or discription'> --> for both stage(add) and commit on single command (only tracked files).
cat <filename> --> for open the file inside the bash
git pull --> for pulling the recent code from remote to local
git push --> pushing a latest code into remote.
git log --> for showing all the logs of the commits (lile date,modified by,commit name etc). 
ls --> for showing the list of files in this repo.
git branch --> for showing all the branches inside the repo has(local).
git branch -a --> for showing all the branches including remote also.
git branch <name> --> for creating new branch in local.
git branch -m <oldname> <newname> --> for rename the branch locally.
git checkout -b <new branch name> --> for creating new branch and switch on that branch.
git checkout <branch name> --> for swiching to another branch.
git branch -D <branch name> --> for hard deleting the branch form repo.(herd method)
git rm --cached <filename> --> for removing file form staging area (index) to working directory(safe method)
git rm -f <filename> --> for removing file permanately form index and working directory.(hard method)
git rm <filename> --> for removing file form repo and file system and it is effective once have commited.
git rm -r <filename> --> for removing folder form repo and file system and it is effective once have commited.
git ls-tree -r <branch> --> for showing the list of file tracked on the repo.
git --version --> for knowing the version of the git installed.
git update-git-for-windows --> for uptading git version.
cat .git/HEAD --> for showing the current commit or branch we are refering.
git push origin --delete <branch name>  --> for deleting the remote branch.
git push orgin :<old name> <new name>  --> for renaming remote branch.
git push origin -u <branch name> --> publishing local branch to remote.
git push --set-upstream origin <branch name> --> publishing local branch to remote.
git status --short